/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Datos.BusDaoJDBC;
import Datos.ClienteDao;
import Datos.DestinoDaoJDBC;
import Logica.Cliente;
import Logica.Destino;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alumno
 */
public class FormDestino extends javax.swing.JDialog {

    List<Destino> destinos;
    
    public FormDestino(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargarTabla();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCiudad = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        lblCosto = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBus = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrar Buses");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificar Destino"));

        lblCiudad.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCiudad.setText("Ciudad");

        txtCiudad.setEnabled(false);

        lblCosto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCosto.setText("Costo");

        txtCosto.setEnabled(false);

        btnGuardar.setText("Grabar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        tablaBus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaBus);

        btnActualizar.setText("Actualizar");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        lblId.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblId.setText("Id");

        txtId.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                .addComponent(lblCosto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar))
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnModificar)
                    .addComponent(btnActualizar)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(btnEliminar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar)
                            .addComponent(btnGuardar))
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCiudad)
                            .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("ModiificarDestino");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cargarTabla(){
        DefaultTableModel modelo= new DefaultTableModel();
        DestinoDaoJDBC destinoJdbc=new DestinoDaoJDBC();
        try {
            destinos=destinoJdbc.seleccionar();
            modelo.setColumnIdentifiers(new Object[]{"Id","Ciudad","Costo"});
            destinos.forEach((destino) -> {
                modelo.addRow(new Object[]{destino.getIdDestino(),destino.getCiudad(),destino.getCosto()});
            });
        } catch (SQLException ex) {
            Logger.getLogger(FormDestino.class.getName()).log(Level.SEVERE, null, ex);
        }
        tablaBus.setModel(modelo);
        tablaBus.setEnabled(false);
        
    }
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String ciudad=JOptionPane.showInputDialog("Introduce la ciudad del destino a buscar");
        if (ciudad!=null){
            DefaultTableModel modelo= new DefaultTableModel();
            DestinoDaoJDBC destinoJdbc=new DestinoDaoJDBC();
            Destino destino;
            try {
                destino=destinoJdbc.buscar(ciudad);
                if (destino!=null){
                   modelo.setColumnIdentifiers(new Object[]{"Id","Ciudad","Costo"});
                   modelo.addRow(new Object[]{destino.getIdDestino(),destino.getCiudad(),destino.getCosto()});
                   tablaBus.setModel(modelo);
                   tablaBus.setEnabled(false);
                }else{
                   JOptionPane.showMessageDialog(this, "no existe el destino");
                   modelo.setColumnIdentifiers(new Object[]{"Id","Ciudad","Costo"});
                   modelo.addRow(new Object[]{null,null,null,null});
                   tablaBus.setModel(modelo);
                   tablaBus.setEnabled(false);             
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(FormDestino.class.getName()).log(Level.SEVERE, null, ex);
            }              
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
       if (txtCiudad.getText().isEmpty() || txtCosto.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Favor de completar los campos vacios");
        }else{
            Destino destino= new Destino();
            destino.setCiudad(txtCiudad.getText());
            destino.setCosto(Double.parseDouble(txtCosto.getText()));
                                    
            DestinoDaoJDBC DestinoDao=new DestinoDaoJDBC();
            try {
                DestinoDao.insertar(destino);
                JOptionPane.showMessageDialog(this, "alta realizado");
                this.cargarTabla();
                txtCosto.setText("");
                txtCiudad.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(FormPasajero.class.getName()).log(Level.SEVERE, null, ex);
            }

        } 
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        txtCosto.setEnabled(true);
        txtCiudad.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnNuevo.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
            String ciudad=JOptionPane.showInputDialog("Introduce ciudad a eliminar");
            DestinoDaoJDBC DestinoDao=new DestinoDaoJDBC();
            Destino destino;      
        try {
            destino = DestinoDao.buscar(ciudad);
            if (destino!=null){
                DestinoDao.eliminar(destino);
                JOptionPane.showMessageDialog(this, "Bus Eliminado");
                this.cargarTabla();
            }else{
                JOptionPane.showMessageDialog(this, "no existe el bus");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(FormDestino.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        txtId.setText("");
        txtCosto.setText("");
        txtCiudad.setText("");
        txtCosto.setEnabled(false);
        txtCiudad.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnModificar.setEnabled(true);
        btnCancelar.setEnabled(false);
        btnNuevo.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
            String ciudad=JOptionPane.showInputDialog("Introduce ciudad del destino a buscar");
        if (ciudad!=null){
            DefaultTableModel modelo= new DefaultTableModel();
            DestinoDaoJDBC destinoJdbc=new DestinoDaoJDBC();
            Destino destino;
            try {
                destino=destinoJdbc.buscar(ciudad);
                if (destino!=null){
                  txtCosto.setText(destino.getCosto()+"");
                  txtCiudad.setText(destino.getCiudad());
                  txtId.setText(destino.getIdDestino()+"");
                  txtId.setEnabled(false);
                  txtCosto.setEnabled(true);
                  txtCiudad.setEnabled(true);
                  btnModificar.setEnabled(false);
                  btnActualizar.setEnabled(true);
                  
                }else{
                   JOptionPane.showMessageDialog(this, "no existe el Destino");
                    
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(FormDestino.class.getName()).log(Level.SEVERE, null, ex);
            }              
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
            if (txtCiudad.getText().isEmpty() || txtCosto.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Favor de completar los campos vacios");
        }else{
            Destino destino= new Destino();
            destino.setCiudad(txtCiudad.getText());
            destino.setCosto(Double.parseDouble(txtCosto.getText()));
            destino.setIdDestino(Integer.parseInt(txtId.getText()));
                        
            DestinoDaoJDBC destinoDao=new DestinoDaoJDBC();
            try {
                destinoDao.actualizar(destino);
                JOptionPane.showMessageDialog(this, "Destino Actualizado");
                this.cargarTabla();
                txtCosto.setText("");
                txtCiudad.setText("");
                txtId.setText("");
                btnActualizar.setEnabled(false);
                btnModificar.setEnabled(true);
                        
            } catch (SQLException ex) {
                Logger.getLogger(FormPasajero.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCiudad;
    private javax.swing.JLabel lblCosto;
    private javax.swing.JLabel lblId;
    private javax.swing.JTable tablaBus;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
